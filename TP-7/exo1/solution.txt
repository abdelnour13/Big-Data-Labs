### Question 01 : 

CREATE TYPE season_length AS STRUCT<season_id INT, episode_count INT>;
SHOW TYPES;

### Question 02 :

The appropriate collection type for titles and production_changes : 
    - titles : tables, they are mutables.
    - production_changes : stream because thery immutable events.


### Question 03 :

CREATE STREAM productionChanges (
    rowkey VARCHAR KEY, 
    title_id INT, 
    change_type VARCHAR,
    before SEASON_LENGTH,
    after SEASON_LENGTH,
    created_at VARCHAR
) WITH (
    kafka_topic='production_changes', 
    value_format='json', 
    partitions=4,
    TIMESTAMP='created_at',
    TIMESTAMP_FORMAT='yyyy-MM-dd HH:mm:ss'
);

CREATE TABLE title (
    id INT PRIMARY KEY,
    title VARCHAR
) WITH (
    KAFKA_TOPIC='titles',
    PARTITIONS='4',
    VALUE_FORMAT='JSON'
);

LIST STREAMS;
LIST TABLES;

### Question 04 : 

INSERT INTO title (id, title)
VALUES (1,'title1');

INSERT INTO productionChanges (rowkey, title_id,change_type,before,after,created_at)
VALUES ('rowkey1',1,'season_length',STRUCT(season_id := 1,episode_count := 12),STRUCT(season_id := 1,episode_count := 8),'2021-02-08 11:30:00');

### Question 05 : 

SET 'auto.offset.reset' = 'earliest';

SELECT * FROM productionChanges
WHERE created_at < '2023-04-14 Ã  12:00:00'
EMIT CHANGES;

### Question 06 : 

SELECT * FROM productionChanges
WHERE change_type LIKE 'season%'
EMIT CHANGES;

### Question 07 :

CREATE STREAM season_length_changes
WITH (
    KAFKA_TOPIC='season_length_changes',
    PARTITIONS='4',
    VALUE_FORMAT='JSON',
    REPLICAS = '1'
)
AS 
    SELECT rowkey,title_id,created_at,
        IFNULL(after->season_id, before->season_id) as season_id,
        before->episode_count as old_episode_count,
        after->episode_count as new_episode_count
    FROM productionChanges 
    WHERE change_type = 'season_length';

### Question 08 : 

SELECT title
FROM season_length_changes s
INNER JOIN title t
ON CAST(s.title_id AS INT) = t.id
EMIT CHANGES ;

### Question 09 :

CREATE STREAM season_length_changes_enriched
WITH (
    KAFKA_TOPIC='season_length_changes_enriched',
    PARTITIONS='4',
    VALUE_FORMAT='JSON',
    REPLICAS = '1',
    TIMESTAMP='created_at',
    TIMESTAMP_FORMAT='yyyy-MM-dd HH:mm:ss'
) AS 
    SELECT rowkey,title_id,created_at,old_episode_count,new_episode_count,title,id
    FROM season_length_changes s
    INNER JOIN title t
    ON CAST(s.title_id AS INT) = t.id;

### Question 10 : 

CREATE TABLE season_length_change_counts
WITH (
    KAFKA_TOPIC='season_length_change_counts',
    PARTITIONS='4',
    VALUE_FORMAT='JSON',
    REPLICAS = '1'
) AS 
    SELECT title_id,COUNT(*) AS change_count,LATEST_BY_OFFSET(new_episode_count) AS latest_episode_count
    FROM season_length_changes_enriched
    WINDOW TUMBLING (SIZE 1 HOUR)
    GROUP BY title_id;